# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  before_all do |lane|
    if is_ci
      setup_ci
    end
  end

  desc "Create ipa"
  lane :build do

    if !is_ci
      ensure_git_status_clean(show_uncommitted_changes: true, show_diff: true)
    end

    assemble_shared
    cocoapods(try_repo_update_on_error: true)

    app_store_connect_api_key(is_key_content_base64: true)

    previous_build_number = latest_testflight_build_number
    current_build_number = previous_build_number + 1

    increment_build_number(build_number: current_build_number)

    sync_certificates

    if is_ci
      make_strings
    end

    gym

    if !is_ci
      reset_git_repo
    end
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    # build_shared
    # cocoapods(try_repo_update_on_error: true)
    # api_key = app_store_connect_api_key(is_key_content_base64: true)
    # previous_build_number = latest_testflight_build_number(api_key: api_key)
    # current_build_number = previous_build_number + 1
    # increment_build_number(
    #   build_number: current_build_number,
    #   skip_info_plist: true
    # )
    # build_app(scheme: "Conjugator")
    build
    pilot
  end

  desc "Assemble shared"
  lane :assemble_shared do
    gradle(
      project_dir: "../",
      task: "clean"
    )

    gradle(
      project_dir: "../",
      task: "shared:generateDummyFramework"
    )
  end

  desc "Sync certificates"
  lane :sync_certificates do
    #read-only disables match from overriding the existing certificates.
    match({readonly: true, type: "appstore"})
  end

  desc "Makes Strings file"
  lane :make_strings do
    str1=ENV['RED_STRING_1']
    str2=ENV['RED_STRING_2']

    sh "../scripts/make_strings.sh \"#{str1}\" \"#{str2}\""
  end

end
