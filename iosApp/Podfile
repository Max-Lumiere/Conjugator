
ios_version = '15.0'
platform :ios, ios_version
install! 'cocoapods', :disable_input_output_paths => true
inhibit_all_warnings!


def available_pods

  #pod 'LocalPod', :path => '../LocalPod', :inhibit_warnings => false
  pod 'Firebase/AnalyticsWithoutAdIdSupport'
  pod 'FirebaseCrashlytics'
  pod 'LumiereToolkit', :git => 'git@github.com:Max-Lumiere/LumiereToolkit.git'
  pod 'shared', :path => '../shared'
end

target 'Conjugator' do
  available_pods

end

target 'ConjugatorTests' do
  available_pods

  pod 'Quick'
  pod 'Nimble'
end

post_install do |installer|

  installer.pods_project.targets.each do |target|

    installer.pods_project.build_configurations.each do |config|
      # supresses deprecation warnings
      config.build_settings['OTHER_CFLAGS'] = "-Wno-deprecated"

      # dead code stripping
      config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'

    end

    # updates deployment target
    target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = ios_version
    end
  end
end

# Based on dependecy analysis = true
post_integrate do |installer|
  main_project = installer.aggregate_targets[0].user_project
  pods_project = installer.pods_project
  targets = main_project.targets + pods_project.targets
  targets.each do |target|
    run_script_build_phases = target.build_phases.filter { |phase| phase.is_a?(Xcodeproj::Project::Object::PBXShellScriptBuildPhase) }
    cocoapods_run_script_build_phases = run_script_build_phases.filter { |phase| phase.name.start_with?("[CP") }
    cocoapods_run_script_build_phases.each do |run_script|
      next unless (run_script.input_paths || []).empty? && (run_script.output_paths || []).empty?
      run_script.always_out_of_date = "1"
    end
  end
  main_project.save
  pods_project.save
end
